# This is a Spring Boot configuration file in YAML format.
# It defines settings for the application, particularly for the "prod" profile.
# Server configuration
server:
  port: 8080  # The port on which the application will run.
  #    servlet:
  #        context-path: /api  # The base path for all endpoints in the application.
  error:
    include-message: always
# Logging configuration
logging:
  level:
    org.springframework.jdbc.datasource.init: DEBUG
    root: INFO  # Default logging level for the application.
    org.springframework.web: DEBUG  # Debug-level logging for Spring web components.
    com.champsoft: TRACE  # Trace-level logging for a specific package (e.g., com.example).
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Spring configuration specifically for the "docker" profile
spring:
  config:
    activate:
      on-profile: docker
  # Application-specific settings
  application:
    # The name of the application. Used for identification in logs and monitoring tools.
    name: game-management
  # DataSource configuration for connecting to the database
  datasource:
    # --- CHANGED: Updated JDBC URL for PostgreSQL ---
    # Points to the 'postgres-game' service defined in docker-compose.yml
    # Uses the standard PostgreSQL port 5432 (internal container port)
    # Connects to the 'game-db' database
    url: jdbc:postgresql://postgres-game:5432/game-db
    # Database username (matches POSTGRES_USER in docker-compose)
    username: user
    # Database password (matches POSTGRES_PASSWORD in docker-compose)
    password: pwd
    # --- CHANGED: Updated JDBC driver class for PostgreSQL ---
    driver-class-name: org.postgresql.Driver

  # JPA (Java Persistence API) configuration for database interaction
  jpa:
    # Hibernate-specific settings
    hibernate:
      # Hibernate schema generation mode.
      # "none" means no schema changes are made automatically.
      # Consider "update" during development if you want Hibernate to manage schema changes.
      # Ensure your SQL scripts are compatible if using "none".
      ddl-auto: none
    # Whether to log SQL statements to the console. Useful for debugging.
    show-sql: true
    # Additional properties for Hibernate
    properties:
      hibernate:
        # Whether to format SQL statements in logs for better readability.
        format_sql: true
        # --- ADDED: Specify the PostgreSQL dialect for Hibernate ---
        # Helps Hibernate generate optimized SQL for PostgreSQL
        dialect: org.hibernate.dialect.PostgreSQLDialect

  # SQL initialization settings
  sql:
    init:
      # --- CHANGED: Specifies the database platform as PostgreSQL ---
      # Spring Boot will now look for files named schema-postgres.sql and data-postgres.sql
      # (or schema.sql/data.sql if platform-specific files aren't found).
      platform: postgres
      # Specifies when to initialize the database.
      # "always" means SQL scripts will always be executed on startup.
      mode: always
      logging:
        enabled: true